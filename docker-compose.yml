version: "3"
services:
    client:
        build:
            context: ./epic-suite-gui
            dockerfile: Dockerfile
        image: client
        ports:
            - "3000:3000"
        container_name: client
        volumes:
          - ./epic-suite-gui/.next:/app/.next
    initialconditions:
        build:
            context: ./init-cond/endpointV1.2
            dockerfile: Dockerfile

        image: initial_conditions_server
        ports:
            - "5002:5002"
        container_name: initialconditions
    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile

        image: nginx_proxy
        container_name: nginx
        volumes:
            - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
        ports:
            - "80:80"
        depends_on:
            - initialconditions
            - covid19geomodeller
            - sse
    covid19geomodeller:
        container_name: covid19geomodeller
        image: simulation-backend
        command: conda run -n myenv python backend/run.py
        build: 
            context: ./simulation-backend
            dockerfile: Dockerfile
        ports:
          - "5003:5003"
        volumes:
          - ./simulation-backend/backend:/app/backend
        depends_on:
          - redis
        entrypoint: "./install.sh"
    worker:
        container_name: worker
        image: simulation-backend
        command: conda run -n myenv rq worker --name worker --url redis://redis:6379/0
        build: 
            context: ./simulation-backend
            dockerfile: Dockerfile
        depends_on:
          - redis
          - covid19geomodeller
        volumes:
          - ./server_cv19gm/backend:/app/backend
        entrypoint: "./worker.sh"

    sse:
        container_name: sse
        image: sse
        build: 
            context: ./sse-server
            dockerfile: Dockerfile
        ports:
          - "9000:9000"
        volumes:
          - ./sse-server/app:/code/app
        depends_on:
          - redis
    redis:
        container_name: redis
        image: "redis:alpine"
